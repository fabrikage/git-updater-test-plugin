on:
  workflow_dispatch:
  push:
    tags:
      - '*.*'

name: Create release

env:
  PLUGIN_NAME: 'git-updater-test-plugin'

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch full Git history
        run: git fetch --prune --unshallow

      - name: Generate dynamic Changelog for release body
        run: |
          echo "# Changelog" > /tmp/CHANGELOG.md
          echo "" >> /tmp/CHANGELOG.md
          TAGS=$(git for-each-ref --sort=creatordate --format '%(refname:short)' refs/tags)
          PREV_TAG=""
          for TAG in $TAGS; do
            echo "## $TAG" >> /tmp/CHANGELOG.md
            echo "" >> /tmp/CHANGELOG.md
            if [ -z "$PREV_TAG" ]; then
              git log $TAG --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" >> /tmp/CHANGELOG.md
            else
              git log $PREV_TAG..$TAG --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" >> /tmp/CHANGELOG.md
            fi
            echo "" >> /tmp/CHANGELOG.md
            PREV_TAG=$TAG
          done

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Find and replace {version} in main plugin file
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: '${{ env.PLUGIN_NAME }}.php'
          find: '{version}'
          replace: '${{ github.ref_name }}'

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.COMPOSER_AUTH }}"}}'
        with:
          composer-options: '--no-dev --no-interaction --no-progress --optimize-autoloader --classmap-authoritative'

      - name: Cleanup
        run: |
          rm -rf .git .github .gitignore composer.* package.json package-lock.json TODO.md node_modules assets/scss Makefile .prettierrc

      - name: Copy plugin files to folder for manual ZIP
        run: |
          mkdir ${{ env.PLUGIN_NAME }}
          shopt -s extglob
          cp -r !(git-updater-test-plugin) ${{ env.PLUGIN_NAME }}

      - name: Create manual ZIP
        run: zip -r ${{ env.PLUGIN_NAME }}-${{ github.ref_name }}.zip ${{ env.PLUGIN_NAME }}

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ${{ env.PLUGIN_NAME }}-${{ github.ref_name }}.zip
            ${{ env.PLUGIN_NAME }}-update-${{ github.ref_name }}.zip
          bodyFile: /tmp/CHANGELOG.md
